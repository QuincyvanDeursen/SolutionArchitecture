// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PaymentService.Database;

#nullable disable

namespace PaymentService.Migrations
{
    [DbContext(typeof(PaymentDbContext))]
    [Migration("20240620155538_AddedEventualConsistencyTables")]
    partial class AddedEventualConsistencyTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PaymentService.Models.PaymentCustomer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("PaymentService.Models.PaymentOrder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Shared.Models.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Payments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0dc1a8a0-3784-4108-b84a-fe9995ae355d"),
                            CustomerId = new Guid("dc020390-ca01-44c6-b30d-928ca2f50e91"),
                            OrderId = new Guid("fb2c7c33-9b28-4b5c-9fc2-2a471b4ad7d2"),
                            Status = 2,
                            TotalPrice = 100.00m
                        },
                        new
                        {
                            Id = new Guid("19cd887d-1b79-45ff-a8f0-fea40f41f295"),
                            CustomerId = new Guid("1a2ac47f-3e82-49d4-a7dc-eba643f6d0a3"),
                            OrderId = new Guid("bbd6c015-df54-4b7b-ab6e-ebe689ad91f5"),
                            Status = 2,
                            TotalPrice = 200.00m
                        },
                        new
                        {
                            Id = new Guid("7eb7ed6a-8cea-439e-81a6-82e77e03cfa0"),
                            CustomerId = new Guid("b7ae48b2-0252-4207-9f54-bc297358ca46"),
                            OrderId = new Guid("5a9763c7-d428-4d87-a59e-ae41f688e550"),
                            Status = 1,
                            TotalPrice = 300.00m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
